@model Azurite.Storehouse.Wrappers.ProductW

@section styles_before {
    <link href="~/Content/select2/dist/css/select2.min.css" rel="stylesheet" />
}
@section styles {
    <link href="~/Content/iCheck/skins/square/green.css" rel="stylesheet" />
}

<div class="">
    <div class="row">

        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Промени продукт</h2>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    @using (Html.BeginForm<ProductsController>(c => c.Edit(Model.Id), FormMethod.Post, null, new { Id = "addProductForm" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NameEN, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.EditorFor(model => model.NameEN, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NameEN, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DescriptionEN, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.TextAreaFor(model => model.DescriptionEN, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DescriptionEN, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    <label class="control-label">
                                        @Html.CheckBoxFor(m => m.Active, new { @class = "iCheck_cb" })
                                    </label>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2 col-xs-12" })
                                <div class="col-md-10 col-sm-10 col-xs-12">
                                    @Html.DropDownListFor(m => m.CategoryId, null, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2 col-sm-2 col-xs-12">Атрибути:</label>
                                <div class="col-md-10 col-sm-10 col-xs-12 attributes-holder">
                                    @{ 
                                        int i = 0;
                                    }
                                    @foreach (var attribute in Model.ProductAttributes)
                                    {
                                        <div>
                                            <input type="hidden" name="ProductAttributes[@i].AttributeId" value="@attribute.AttributeId" />
                                            <input type="hidden" name="ProductAttributes[@i].Id" value="@attribute.Id" />
                                            <div class="form-group">
                                                <label class="control-label">@(attribute.CategoryAttribute?.AttributeName) / @(attribute.CategoryAttribute?.AttributeNameEN)</label>
                                            </div>
                                            <input name="ProductAttributes[@i].Value" type="text" class="form-control" placeholder="BG" value="@attribute.Value"
                                                   data-val="true" data-val-required="Полето е задължително!" />
                                            <span class="field-validation-valid text-danger" data-valmsg-for="ProductAttributes[@i].Value" data-valmsg-replace="true"></span>
                                            <input name="ProductAttributes[@i].ValueEN" type="text" class="form-control m-t-10" placeholder="EN"  value="@attribute.ValueEN"
                                                   data-val="true" data-val-required="Полето е задължително!" />
                                            <span class="field-validation-valid text-danger" data-valmsg-for="ProductAttributes[@i].ValueEN" data-valmsg-replace="true"></span>
                                        </div>
                                        i++;
                                    }

                                </div>
                            </div>

                            <div class="ln_solid"></div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-sm-offset-2 col-md-10">
                                    @foreach (var state in ViewData.ModelState.Values)
                                    {
                                        foreach (var error in state.Errors)
                                        {
                                            <div class="model-state-error">@error.ErrorMessage</div>
                                        }
                                    }
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-sm-offset-2 col-md-10">
                                    <a class="btn btn-default" href="@(Url.Action<ProductsController>(c => c.Index()))">Откажи</a>
                                    <input type="submit" value="Запиши" class="btn btn-success" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Content/iCheck/icheck.min.js"></script>
    <script src="~/Content/select2/dist/js/select2.full.min.js"></script>
    <script src="~/Scripts/App/productsAddEdit.js"></script>

    <script>
        initEdit();
    </script>
}




