@model Azurite.Storehouse.Models.ViewModels.LoginViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Login</title>

    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/gentelella/custom.min.css" rel="stylesheet" />
    <link href="~/Content/gentelella/animate.min.css" rel="stylesheet" />
    <link href="~/Content/login.css" rel="stylesheet" />
</head>
<body style="background:#F7F7F7;">
    <div class="login_wrapper">
        <div id="wrapper">
            <div id="login" class="animate form">
                <section class="login_content">
                    @using (Html.BeginForm<AccountController>(c => c.Login(null), FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <h1 class="title-message">Добре дошли в Администраторския панел на вашия магазин</h1>
                        <div>
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Потребителско име" } })
                        </div>
                        <div>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Парола" })
                        </div>
                        
                        foreach (var item in ViewData.ModelState)
                        {
                            if (item.Value.Errors.Any())
                            {
                                foreach (ModelError e in item.Value.Errors)
                                {
                                    <div class="model-state-error" style="color: #b94a48; padding-bottom: 10px;">
                                        @e.ErrorMessage
                                    </div>
                                }
                            }
                        }

                        <div>
                            <input type="submit" class="btn btn-default login-btn" value="Вход" />
                        </div>
                        <div class="clearfix"></div>
                        <div class="separator">
                            <div class="clearfix"></div>
                            <br />
                            <div>
                                <p>©2016 All Rights Reserved.</p>
                            </div>
                        </div>
                    }
                    <!-- form -->
                </section>
                <!-- content -->
            </div>
        </div>
    </div>

    <script src="~/Scripts/jquery.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
</body>
</html>
